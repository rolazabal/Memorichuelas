#! /usr/bin/awk -f
BEGIN {
getline line < "/home/rfo10/public_html/project/dict.txt"
dict = line
print "Content-type: text/html\n"
print "<style>"
print "	.header {"
print "        display:inline-block;width:800px;height:60px;background-color:orange;}"
print "      .body {"
print "        display:inline-block;width:800px;height:430px;}"
print "      .subHead {"
print "        display:inline-block;width:800px;height:50px;background-color:lightblue;}"
print "      .menu {"
print "        display:inline-block;width:800px;height:380px;background-color:pink;}"
print "      #msg {"
print "        display:inline-block;width:800px;height:50px;background-color:white;}"
print "      .error {color:red;}"
print "      .footer {"
print "        display:inline-block;width:800px;height:100px;background-color:lightblue;}"
print "      .learnList {"
print "	display:inline-block;float:right;width:200px;height:380px;}"
print "      .learnTable {"
print "	display:inline-block;width:100%;height:340px;table-layout:fixed;}"
print "      .wordList {"
print "	display:inline-block;float:left;width:600px;height:380px;}"
print "      .wordTable {"
print "	display:inline-block;table-layout:fixed;overflow:hidden;width:600px;height:340px;}"
print "      td {text-overflow:ellipsis;overflow-x:hidden;}"
print "      .listNav {"
print "	display:inline-block;width:600px;height:40px;}"
print "      .nav {"
print "	float:left;width:20%;height:100%;background-color:lightpink;}"
print "      .lRow {height:20px;width: 200px;}"
print "      .lCol {padding:0;width:200px;}"
print "      .lB {"
print "	position:relative;height:100%;width:30px;float:right;z-index:2;}"
print "      .lName {"
print "	position:absolute;z-index:1;height:20px;overflow-x:hidden;}"
print "      .wB {height:100%;width:100%;}"
print "      .wRow {height:20px;width:300px;}"
print "      .wCol {padding:0;width:300px;}"
print "      .learn {"
print "	display:inline-block;height:40px;width:100%;background-color:green;}"
print "      .page {"
print "	display:inline-block;float:right;width:50%;height:100%;}"
print "      .quit {float:right;height:100%;width:100px;}"
print "      .question {display:inline-block;width:800px;height:190px;}"
print "      .bPanel {display:inline-block;width:800px;height:190px;}"
print "      .quizB {display:inline-block;float:left;}"
print "      .success {color:green;}"
print "      .titleHead {height:40px;}"
print "      .definitions {height:340px;overflow-y:scroll;}"
print "      .gotIt {background-color:green;height:50px;width:100px;}"
print "</style></head>"
print "<body><div class='header'><h1>Memorichuelas: Puerto Rican vocabulary learning!</h1></div>"
print "<div id='main' class='body'></div><div id='msg'>"
print "<b class='error' id='error'></b><b class='success' id='success'></b>"
print "</div><div class='footer'>"
print "	<p>App v1.3 by Ricardo Olazabal 2025; CSDS285; <a href='https://www.definiciones-de.com'>Definiciones-de.com</a> (data); <a href='https://membean.com'>Membean, Inc.</a> (concept)</p><input type='button' value='citations' onclick=displayCredits()></div><script>"
print "      function loadDict() {"
print "        let ret = [];"
print "        let words = dictStr.split('$');"
print "        let x = 0;"
print "        for (word in words) {"
print "          let attr = words[word].split('#');"
print "          let definitions = attr[1].split('&');"
print "          let examples = attr[2].split('&');"
print "			//change to 3"
print "	let credit = attr[3];"
print "          ret[x] = [attr[0], definitions, examples, credit];"
print "          x++;"
print "        }"
print "        dictStr = '';"
print "        return ret;"
print "      }"
print "      function clearMsg() {"
print "        document.getElementById('error').innerHTML = '';"
print "	document.getElementById('success').innerHTML = '';"
print "      }"
print "      function validate() {"
print "        if (wordScore.length > 1) {"
print "          quizFlow();"
print "        } else {"
print "          document.getElementById('error').innerHTML ="
print "            'Please pick at least 2 words!';"
print "        }"
print "      }"
print "      function quizFlow() {"
print "	//check for zeros"
print "	end = true;"
print "	for (score in wordScore) {"
print "		if (wordScore[score][1] == 0) {"
print "			displayDefinition(wordScore[score][0]);"
print "			return true;"
print "		} else if (wordScore[score][1] != 1) end = false;"
print "	}"
print "	//check for all ones"
print "	if (end) {"
print "		displayStart();"
print "		return true;"
print "	}"
print "        //scores.innerHTML = wordScore;"
print "        let rand = pickWord();"
print "	while (rand == lastW) rand = pickWord();"
print "	lastW = rand;"
print "        pickQuizType(wordScore[rand][0]);"
print "	return true;"
print "      }"
print "      function pickWord() {"
print "        let choice = [];"
print "        let chance = [];"
print "        let total = 0;"
print "        for (i = 0; i < wordScore.length; i++) {"
print "          chance[i] = 2 - wordScore[i][1] * 1.5;"
print "          total += chance[i];"
print "        }"
print "        let l = 0;"
print "        for (j = 0; j < chance.length; j++) {"
print "          for (k = 0; k <= Math.round(10 * (chance[j] / total)); k++) {"
print "            choice[l] = j;"
print "            l++;"
print "          }"
print "        }"
print "        return choice[Math.round(Math.random() * (choice.length - 1))];"
print "      }"
print "      function clearMain() {"
print "        main.innerHTML = '';"
print "      }"
print "      function displayDefinition(word) {"
print "        clearMain();"
print "	let m = \"<div class='subHead'><input class='quit' type='button' value='Quit' onclick=displayStart()><h2>Read definition before continuing:</h2></div><div class='menu'>\";"
print "        m += \"<div class='titleHead'><h3>\" + dict[word][0].charAt(0).toUpperCase() + dict[word][0].slice(1) + \"</h3></div>\";"
print "        m += \"<div class='definitions'><ul>\";"
print "        for (i = 0; i < dict[word][1].length; i++) {"
print "          m += \"<li><p>\" + dict[word][1][i] + \"</p></li>\";"
print "        }"
print "	let id = 0;"
print "	for (ind in wordScore) if (wordScore[ind][0] == word) id = ind;"
print "        m += \"<li><input class='gotIt' type='button' onclick='updateScore(\" + id + \", -1)' value='Got it'></li></ul></div></div>\";"
print "        main.innerHTML = m;"
print "      }"
print "      function pickQuizType(word) {"
print "        for (act in wordScore) if (wordScore[act][0] == word) answer = act;"
print "        let examples = dict[word][2];"
print "        if (examples[0] != '' && Math.random() > 0.5) {"
print "          displayExampleQuiz("
print "            word,"
print "            Math.round(Math.random() * (examples.length - 1))"
print "          );"
print "        } else {"
print "          displayDefinitionQuiz("
print "            word,"
print "            Math.round(Math.random() * (dict[word][1].length - 1))"
print "          );"
print "        }"
print "      }"
print "      function displayDefinitionQuiz(word, def) {"
print "        clearMain();"
print "        let question = dict[word][1][def];"
print "	let filter = dict[word][0].replace(/[^A-Za-z]*\(.*\)/, \"\");"
print "        question = question.replace(filter, '____');"
print "	filter = dict[word][0].replace(/^.*\(/, \"\");"
print "	filter = filter.replace(/\)/, \"\");"
print "        question = question.replace(filter, '____');"
print "        let m = \"<div id='definition' class='subHead'><input class='quit' type='button' value='Quit' onclick=displayStart()><h2>Pick the word described by the following definition:</h2></div>\";"
print "        m += \"<div class='menu'><div class='question'><h3>\" + question + \"</h3></div>\";"
print "        m += \"<div class='bPanel'>\";"
print "        let ops = [];"
print "	let num = wordScore.length;"
print "	if (num > 4) num = 4;"
print "	for (i = 0; i < num; i ++) {"
print "		let op = wordScore[Math.round(Math.random() * (wordScore.length - 1))][0];"
print "		while (ops.includes(op)) op = wordScore[Math.round(Math.random() * (wordScore.length - 1))][0];"
print "		ops[i] = op;"
print "		let style = \"\";"
print "		if (num > 3) style = \"'width:50%;height:50%'\";"
print "		else if (num > 2) style = \"'width:33.33%;height:100%'\";"
print "		else style = \"'width:50%;height:100%'\";"
print "		if (op == word) m += \"<input type='button' class='quizB' style=\" + style + \" value ='\"+dict[op][0]+\"' onclick='updateScore(\"+answer+\", true)'>\";"
print "		else m += \"<input type='button' class='quizB' style=\" + style + \" value ='\"+dict[op][0]+\"' onclick='updateScore(\"+answer+\", false)'>\";"
print "	}"
print "        m += \"</div></div>\""
print "        main.innerHTML = m;"
print "      }"
print "      function displayExampleQuiz(word, ex) {"
print "        clearMain();"
print "        let question = dict[word][2][ex];"
print "	let filter = dict[word][0].replace(/[^A-Za-z]*\(.*\)/, \"\");"
print "        question = question.replace(filter, '____');"
print "	filter = dict[word][0].replace(/^.*\(/, \"\");"
print "	filter = filter.replace(/\)/, \"\");"
print "        question = question.replace(filter, '____');"
print "        let m = \"<div id='example' class='subHead'><input class='quit' type='button' value='Quit' onclick=displayStart()><h2>Pick the word that fits the following example:</h2></div>\";"
print "        m += \"<div class='menu'><div class='question'><h3>\" + question + \"</h3></div>\";"
print "        m += \"<div class='bPanel'>\""
print "        let ops = []"
print "	let num = wordScore.length;"
print "	if (num > 4) num = 4;"
print "	for (i = 0; i < num; i ++) {"
print "		let op = word"
print "		while (ops.includes(op)) op = wordScore[Math.round(Math.random() * (wordScore.length - 1))][0];"
print "		ops[i] = op;"
print "		let style = \"\";"
print "		if (num > 3) style = \"'width:50%;height:50%'\";"
print "		else if (num > 2) style = \"'width:33.33%;height:100%'\";"
print "		else style = \"'width:50%;height:100%'\";"
print "		if (op == word) m += \"<input type='button' class='quizB' style=\" + style + \" value ='\"+dict[op][0]+\"' onclick='updateScore(\"+answer+\", true)'>\";"
print "		else m += \"<input type='button' class='quizB' style=\" + style + \" value ='\"+dict[op][0]+\"' onclick='updateScore(\"+answer+\", false)'>\";"
print "	}"
print "        m += \"</div></div>\""
print "	main.innerHTML = m;"
print "      }"
print "      function updateScore(ind, correct) {"
print "	// msg delay"
print "	if (wait) return false;"
print "	let w = 2500;"
print "	if (correct == -1) {"
print "          if (wordScore[ind][1] + 0.25 >= 1) {"
print "            wordScore[ind][1] = 1;"
print "          } else {"
print "            wordScore[ind][1] += 0.25;"
print "          }"
print "		quizFlow();	"
print "	} else if (correct) {"
print "          if (wordScore[ind][1] + 0.25 >= 1) {"
print "            wordScore[ind][1] = 1;"
print "          } else {"
print "            wordScore[ind][1] += 0.25;"
print "          }"
print "		document.getElementById('success').innerHTML = 'Correct!';"
print "			    //wait"
print "			    wait = true;"
print "			    setTimeout(() => {wait = false; clearMsg(); quizFlow();}, w);"
print "        } else {"
print "          if (wordScore[ind][1] - 0.25 < 0) {"
print "            wordScore[ind][1] = 0;"
print "          } else {"
print "            wordScore[ind][1] -= 0.25;"
print "          }"
print "		document.getElementById('error').innerHTML = 'Incorrect!';"
print "			    //wait"
print "			    wait = true;"
print "			    setTimeout(() => {wait = false; clearMsg(); displayDefinition(wordScore[ind][0]);}, w);"
print "        }"
print "      }"
print "      function displayStart() {"
print "        clearMain();"
print "	clearMsg();"
print "        let m = \"<div class='subHead'><h2>Click on words to learn:</h2></div><div class='menu'>\";"
print "        m += \"<div class='wordList'><table id='wL' class='wordTable'></table>\";"
print "        m +=\"<div class='listNav'><input class='nav' type='button' value='|<' onclick='setPage(false, true)'><input class='nav' type='button' value='<' onclick='setPage(false, false)'>\";"
print "        m +=\"<div class='nav'><p class='page'>/\" +"
print "          (pages.length - 1) +"
print "          \"</p><input class='page' id='pageIn' type='number' min='1' max='\" +"
print "          (pages.length - 1) +"
print "          \"' value='\" +"
print "          page +"
print "          \"' onchange=navPage()></div><input class='nav' type='button' value='>' onclick='setPage(true, false)'>\";"
print "        m +=\"<input class='nav' type='button' value='>|' onclick='setPage(true, true)'></div></div><div class='learnList'><table id ='lL' class='learnTable'></table><input class='learn' type='button' value='Begin' onclick=validate()></div></div></div>\";"
print "        main.innerHTML = m;"
print "	page = 1;"
print "	lastW = -1;"
print "        updateWordList();"
print "        updateLearnList();"
print "      }"
print "      function updateWordList() {"
print "        //get word list"
print "        let wordL = document.getElementById('wL');"
print "        let nav = document.getElementById('pageIn');"
print "        nav.value = page;"
print "        let mid ="
print "          pages[page - 1] + Math.ceil((pages[page] - pages[page - 1]) / 2);"
print "        let list = \"\";"
print "        let i = pages[page - 1];"
print "        let j = mid;"
print "        while (i < mid || j < pages[page]) {"
print "          if (i < dict.length) {"
print "            list +="
print "              \"<tr class='wRow'><td class='wCol'><input class='wB' type='button' value='\"+dict[i][0]+\"' onclick=addWord(\" + i + \")></td>\";"
print "          }"
print "          if (j < dict.length) {"
print "            list +="
print "              \"<td class='wCol'><input class='wB' type='button' value='\"+dict[j][0]+"
print "		\"' onclick=addWord(\" + j + \")></td></tr>\";"
print "          } else if (i < dict.length) list += \"</tr>\";"
print "          i++;"
print "          j++;"
print "        }"
print "        wordL.innerHTML = list;"
print "      }"
print "      function updateLearnList() {"
print "        let learnL = document.getElementById('lL');"
print "        let list = '';"
print "        for (t = 0; t <= 14; t++) {"
print "          if (t < wordScore.length)"
print "            list +="
print "				    \"<tr class='lRow'><td class='lCol'><label class='lName'>\" +"
print "              dict[wordScore[t][0]][0] +"
print "				    \"</label><input class='lB' type='button' value='x' onclick=removeWord(\" +"
print "              t +"
print "              \")></td></tr>\";"
print "          else list += \"<tr><td class='lCol'></td></tr>\";"
print "        }"
print "        learnL.innerHTML = list;"
print "      }"
print "      function createPages() {"
print "        let pages = new Array(Math.ceil(dict.length / 30) + 1);"
print "        for (i = 0; i < pages.length; i++) {"
print "          pages[i] = i * 30;"
print "        }"
print "        return pages;"
print "      }"
print "      function navPage() {"
print "        let p = document.getElementById('pageIn').value;"
print "	if (p < 1) p = 1;"
print "	else if (p >= pages.length) p = pages.length - 1;"
print "	if (page != p) {"
print "		page = p;"
print "		updateWordList();"
print "	}"
print "      }"
print "      function setPage(forward, end) {"
print "        let p = page;"
print "        if (end) {"
print "          if (forward) p = pages.length - 1;"
print "          else p = 1;"
print "        } else {"
print "          if (forward) p++;"
print "          else p--;"
print "          if (p >= pages.length) p = pages.length - 1;"
print "          else if (p < 1) p = 1;"
print "        }"
print "	if (p != page) {"
print "        	page = p;"
print "        	updateWordList();"
print "	}"
print "      }"
print "      function addWord(word) {"
print "        clearMsg();"
print "        if (wordScore.length < 15) {"
print "          let pass = true;"
print "          for (w in wordScore) if (wordScore[w][0] == word) pass = false;"
print "          if (pass) {"
print "            wordScore[wordScore.length] = [word, 0];"
print "            updateLearnList();"
print "          } else {"
print "            document.getElementById('error').innerHTML = 'Word already in set!';"
print "          }"
print "        } else {"
print "          document.getElementById('error').innerHTML ="
print "            'You can only pick a maximum of 15 words at a time!';"
print "        }"
print "      }"
print "      function removeWord(ind) {"
print "        clearMsg();"
print "        //recreate and copy array expect for index ind"
print "        let temp = [];"
print "        for (w in wordScore) {"
print "          if (w != ind) temp[temp.length] = wordScore[w];"
print "        }"
print "        wordScore = temp;"
print "        updateLearnList();"
print "      }"
print "	function displayCredits() {"
print "		clearMain();"
print "		clearMsg();"
print "		let m = \"<div class='subHead'><input class='quit' type='button' value='Back' onclick=displayStart()><h2>Bibliography:</h2></div><div class='menu' style='overflow-y:scroll;'><ul>\";"
print "		for (entry in dict) {"
print "			m += \"<li>\" + dict[entry][3] + \"</li>\";	"
print "		}"
print "		m += \"</ul></div>\";"
print "		main.innerHTML = m;"
print "	}"
print "      var dictStr = \"" dict "\";"
print "      var main = document.getElementById('main');"
print "      var dict = loadDict();"
print "      var pages = createPages();"
print "      var page = 1;"
print "	    var lastW = -1;"
print "	var wait = false;"
print "      var wordScore = [];"
print "      var answer = 0;"
print "      displayStart();"
print "</script>"
}
